                                     Assignment 5: NoSQL â€“ AGGREGATE FUNCTIONS AND REGULAR EXPRESSIONS
                                     
                                     
                                     
1.      Write a MongoDB query to sort customer details in ascending order of their name.


> db.customer.find().sort({name:1})
{ "_id" : ObjectId("64817fdf9a68dde2b13dd617"), "name" : "Hasna", "age" : 22, "city" : "kannur", "phn_no" : 81555555555 }
{ "_id" : ObjectId("64817fdf9a68dde2b13dd616"), "name" : "Naza", "age" : 21, "city" : "calicut", "phn_no" : 64444444444 }
{ "_id" : ObjectId("64817fdf9a68dde2b13dd614"), "name" : "Nidha", "age" : 19, "city" : "tvm", "phn_no" : 9222222222 }
{ "_id" : ObjectId("64817fdf9a68dde2b13dd613"), "name" : "Siya", "age" : 18, "city" : "ekm", "phn_no" : 8111111111 }

----------------------------------------------------------------------------------------------------------------------------------------------

2.      Write a MongoDB query to count number of customers in each city.

> db.customer.aggregate([{$group:{_id:"$city",total:{$sum:1}}}])
{ "_id" : "kannur", "total" : 1 }
{ "_id" : "tvm", "total" : 1 }
{ "_id" : "calicut", "total" : 1 }
{ "_id" : "ekm", "total" : 1 }
---------------------------------------------------------------------------------------------------------------------------------------------

3.      Write a MongoDB query to find minimum and maximum age in each city.   

> db.customer.aggregate([{$group:{_id:"$city",max_age:{$max:"$age"},min_age:{$min:"$age"}}}])
{ "_id" : "kannur", "max_age" : 22, "min_age" : 22 }
{ "_id" : "tvm", "max_age" : 19, "min_age" : 19 }
{ "_id" : "calicut", "max_age" : 21, "min_age" : 21 }
{ "_id" : "ekm", "max_age" : 18, "min_age" : 18  }

----------------------------------------------------------------------------------------------------------------------------------------------
